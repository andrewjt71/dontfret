const notes=["E","B","G","D","A","E"],noteMap=["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"],stringOffsets=[4,11,7,2,9,4],fretboard=document.getElementById("fretboard"),taskDisplay=document.getElementById("task-text"),feedback=document.getElementById("feedback"),stringSelect=document.getElementById("string-select"),noteTypeSelect=document.getElementById("note-type-select");let target={};const modeSelect=document.getElementById("mode-select"),showNotesToggle=document.getElementById("show-notes-toggle"),intervalCheatsheet=document.getElementById("interval-cheatsheet"),chords={major:[0,4,7],minor:[0,3,7],diminished:[0,3,6],augmented:[0,4,8],major7:[0,4,7,11],minor7:[0,3,7,10],dominant7:[0,4,7,10],diminished7:[0,3,6,9]};function getChordNotes(e,t){const n=noteMap.indexOf(e);return chords[t].map(e=>noteMap[(n+e)%12])}function noteAt(e,t){return noteMap[(stringOffsets[e]+t)%12]}function isNoteValid(e){const t=noteTypeSelect.value,n=!e.includes("#");return"all"===t||("natural"===t?n:"accidental"!==t||!n)}let clickedPositions=[],incorrectPositions=[];function renderFretboard(){fretboard.innerHTML="",feedback.textContent="",feedback.classList.remove("feedback-correct","feedback-incorrect");const e=fretboard.clientWidth,t=fretboard.clientHeight,n=13,s=stringSelect.value,o=modeSelect.value,i=showNotesToggle.checked;for(let e=0;e<6;e++){const n=.05,o=n*t+e/5*(t*(1-2*n)),i=document.createElement("div");i.classList.add("string-hitbox"),i.style.top=`${o}px`,i.dataset.string=e,"all"!==s&&e===parseInt(s)-1&&"interval"!==modeSelect.value&&i.classList.add("glow"),i.addEventListener("click",handleClick);const a=document.createElement("div");a.classList.add("string-line"),i.appendChild(a),fretboard.appendChild(i)}const a=[3,5,7,9,12];for(let s=0;s<n;s++){const n=s/12*e,o=document.createElement("div");if(o.classList.add("fret-line"),o.style.left=`${n}px`,fretboard.appendChild(o),s>0){const t=document.createElement("div");t.classList.add("fret-label");const n=(s-.5)/12*e;t.style.left=`${n}px`,t.textContent=s,fretboard.appendChild(t)}if(a.includes(s)){const o=document.createElement("div");if(o.classList.add("dot-marker"),o.style.left=n-e/12/2+"px",o.style.top=(12===s?t/2-30:t/2)+"px",fretboard.appendChild(o),12===s){const e=o.cloneNode();e.style.top=t/2+30+"px",fretboard.appendChild(e)}}}if("chord"===o&&clickedPositions.length>0&&clickedPositions.forEach(n=>{const s=(n.fret-1+.5)*(e/12),o=.05*t+n.string/5*(.9*t),i=document.createElement("div");i.classList.add("marker","correct"),i.style.left=`${s}px`,i.style.top=`${o}px`,fretboard.appendChild(i)}),"chord"===o&&incorrectPositions.length>0&&incorrectPositions.forEach(n=>{const s=(n.fret-1+.5)*(e/12),o=.05*t+n.string/5*(.9*t),i=document.createElement("div");i.classList.add("marker","incorrect"),i.style.left=`${s}px`,i.style.top=`${o}px`,fretboard.appendChild(i)}),i)for(let n=0;n<6;n++)for(let s=0;s<=12;s++){const o=noteAt(n,s),i=s/12*e,a=.05,r=a*t+n/5*(t*(1-2*a)),l=document.createElement("div");l.classList.add("note-label"),l.classList.add(o.includes("#")?"accidental":"natural"),l.style.left=i-e/12/2+"px",l.style.top=`${r}px`,l.textContent=o,fretboard.appendChild(l)}}function updateNoteControlsVisibility(){const e=modeSelect.value,t=document.getElementById("string-select").parentElement.parentElement,n=document.getElementById("note-type-select").parentElement.parentElement;"interval"===e||"chord"===e?(t.style.display="none",n.style.display="none"):(t.style.display="flex",n.style.display="flex")}function ordinal(e){return 1===e?"1st":2===e?"2nd":3===e?"3rd":`${e}th`}function newTask(){const e=modeSelect.value;if("interval"===e){const e=[{name:"minor 2nd",semitones:1},{name:"major 2nd",semitones:2},{name:"minor 3rd",semitones:3},{name:"major 3rd",semitones:4},{name:"perfect 4th",semitones:5},{name:"tritone",semitones:6},{name:"perfect 5th",semitones:7},{name:"minor 6th",semitones:8},{name:"major 6th",semitones:9},{name:"minor 7th",semitones:10},{name:"major 7th",semitones:11},{name:"octave",semitones:12}],t=noteMap[Math.floor(12*Math.random())],n=e[Math.floor(Math.random()*e.length)];return target={mode:"interval",root:t,semitones:n.semitones,intervalName:n.name},void(taskDisplay.textContent=`Find the ${n.name} from ${t}`)}if("chord"===e){const e=Object.keys(chords),t=e[Math.floor(Math.random()*e.length)],n=noteMap[Math.floor(12*Math.random())],s=getChordNotes(n,t);clickedPositions=[],incorrectPositions=[],target={mode:"chord",root:n,chordType:t,chordNotes:s,selectedNotes:[],completed:!1};const o="major"===t?"major":"minor"===t?"minor":"diminished"===t?"diminished":"augmented"===t?"augmented":"major7"===t?"major 7th":"minor7"===t?"minor 7th":"dominant7"===t?"dominant 7th":"diminished 7th";return void(taskDisplay.textContent=`Find all the notes in ${n} ${o} chord`)}let t;const n=stringSelect.value;let s,o;t="all"===n?Math.floor(6*Math.random()):parseInt(n)-1;do{o=Math.floor(12*Math.random())+1,s=noteAt(t,o)}while(!isNoteValid(s));target={string:t,fret:o,note:s};const i=ordinal(t+1);taskDisplay.textContent=`Click on the ${s} note on the ${i} string.`}function handleClick(e){const t=modeSelect.value,n=parseInt(e.currentTarget.dataset.string),s=event.offsetX,o=fretboard.clientWidth,i=Math.floor(s/(o/12))+1,a=noteAt(n,i),r=.05*fretboard.clientHeight+n/5*(.9*fretboard.clientHeight),l=document.createElement("div");if(l.classList.add("marker"),l.style.left=`${s}px`,l.style.top=`${r}px`,"interval"===t){const t=noteMap[(noteMap.indexOf(target.root)+target.semitones)%12];return void(a===t?(l.classList.add("correct"),showFeedback(`<div>✅ Good!</div><div style="font-size: 14px; color: #aaa;">You found ${a} correctly!</div>`,"feedback-correct"),createParticles(e.clientX,e.clientY,!0),fretboard.appendChild(l),setTimeout(()=>{renderFretboard(),newTask()},2e3)):(l.classList.add("incorrect"),showFeedback(`<div>❌ OOPS</div><div style="font-size: 14px; color: #aaa;">You clicked ${a}. Expected ${t}.</div>`,"feedback-incorrect"),createParticles(e.clientX,e.clientY,!1),fretboard.appendChild(l)))}if("chord"===t)return target.chordNotes.includes(a)?target.selectedNotes.includes(a)?(l.classList.add("incorrect"),showFeedback(`<div>❌ Already found!</div><div style="font-size: 14px; color: #aaa;">You already found ${a}. Find the remaining notes: ${target.chordNotes.filter(e=>!target.selectedNotes.includes(e)).join(", ")}</div>`,"feedback-incorrect"),createParticles(e.clientX,e.clientY,!1)):(target.selectedNotes.push(a),clickedPositions.push({string:n,fret:i}),l.classList.add("correct"),target.selectedNotes.length===target.chordNotes.length?(showFeedback(`<div>✅ Chord Complete!</div><div style="font-size: 14px; color: #aaa;">You found all notes in ${target.root} ${target.chordType} chord!</div>`,"feedback-correct"),createParticles(e.clientX,e.clientY,!0),target.completed=!0,setTimeout(()=>{target.selectedNotes=[],clickedPositions=[],incorrectPositions=[],renderFretboard(),newTask()},2e3)):(showFeedback(`<div>✅ Good!</div><div style="font-size: 14px; color: #aaa;">Found ${a}.</div>`,"feedback-correct"),createParticles(e.clientX,e.clientY,!0))):(l.classList.add("incorrect"),showFeedback(`<div>❌ Not in chord!</div><div style="font-size: 14px; color: #aaa;">${a} is not in ${target.root} ${target.chordType} chord. Need: ${target.chordNotes.filter(e=>!target.selectedNotes.includes(e)).join(", ")}</div>`,"feedback-incorrect"),createParticles(e.clientX,e.clientY,!1),incorrectPositions.push({string:n,fret:i})),void fretboard.appendChild(l);if(l.classList.add("marker"),l.style.left=`${s}px`,l.style.top=`${r}px`,a===target.note&&n===target.string)l.classList.add("correct"),showFeedback(`<div>✅ Good!</div><div style="font-size: 14px; color: #aaa;">You found ${a} on the ${ordinal(n+1)} string!</div>`,"feedback-correct"),createParticles(e.clientX,e.clientY,!0),fretboard.appendChild(l),setTimeout(()=>{renderFretboard(),newTask()},2e3);else{const t=target.string,s=target.note,o=ordinal(t+1),i=ordinal(n+1);l.classList.add("incorrect"),showFeedback(`<div>❌ OOPS</div><div style="font-size: 14px; color: #aaa;">You clicked ${a} on the ${i} string. Expected ${s} on the ${o} string.</div>`,"feedback-incorrect"),createParticles(e.clientX,e.clientY,!1),fretboard.appendChild(l)}}function createParticles(e,t,n){const s=n?["#4CAF50"]:["#f44336"],o=e,i=t;for(let e=0;e<1;e++){const e=document.createElement("div");e.className="particle";const t=18;e.style.width=t+"px",e.style.height=t+"px",e.style.left=o-t/2+"px",e.style.top=i-t/2+"px",e.style.backgroundColor=s[Math.floor(Math.random()*s.length)];const n=60*Math.random()-30,a=60*Math.random()-30;e.style.transform=`translate(${n}px, ${a}px)`,document.body.appendChild(e),setTimeout(()=>{e.parentNode&&e.parentNode.removeChild(e)},1e3)}}function updateInstructions(){const e=modeSelect.value,t=document.getElementById("instructions-title"),n=document.getElementById("instructions-text");"interval"===e?(t.textContent="Interval Training",n.textContent="In guitar theory (and music theory in general), intervals are the building blocks of melody and harmony. An interval is the distance between two notes, measured in steps or semitones."):"chord"===e?(t.textContent="Chord Training",n.textContent="Learn to identify the notes that make up different chord types. Click on all the notes that belong to the given chord. You can select notes in any order, and the exercise is complete when you've found all the required notes."):(t.textContent="Note Training",n.textContent="Knowing the notes of the guitar neck from memory is one of the most powerful things you can do as a guitarist. It unlocks fluency, creativity, and precision in virtually every area of your playing. Test your knowledge by  guessing the note on the fretboard.")}function showModal(e){const t=document.getElementById("modal-overlay");document.getElementById("modal-content-inner").innerHTML=e,t.style.display="flex"}function hideModal(){document.getElementById("modal-overlay").style.display="none"}function handleScroll(){const e=document.querySelector(".main-header");window.innerWidth<=600||window.scrollY>50?e.classList.add("scrolled"):e.classList.remove("scrolled")}function showFeedback(e,t){feedback.textContent="",feedback.classList.remove("feedback-correct","feedback-incorrect"),feedback.offsetWidth,feedback.innerHTML=e,feedback.classList.add(t)}document.getElementById("new-task").addEventListener("click",()=>{"chord"===modeSelect.value&&(clickedPositions=[],incorrectPositions=[],target&&target.selectedNotes&&(target.selectedNotes=[])),feedback.textContent="",feedback.classList.remove("feedback-correct","feedback-incorrect"),renderFretboard(),newTask()}),modeSelect.addEventListener("change",()=>{"interval"===modeSelect.value&&(stringSelect.value="all"),renderFretboard(),newTask(),updateInstructions(),updateNoteControlsVisibility()}),stringSelect.addEventListener("change",()=>{renderFretboard(),newTask()}),noteTypeSelect.addEventListener("change",()=>{renderFretboard(),newTask()}),showNotesToggle.addEventListener("change",()=>{renderFretboard()}),document.getElementById("info-icon").addEventListener("click",()=>{const e=modeSelect.value;if("interval"===e){showModal('\n      <h3>Interval Reference Guide</h3>\n      <div class="interval-row">\n        <span class="interval-name">Minor 2nd</span>\n        <span class="interval-semitone">1 semitone</span>\n        <span class="interval-description">Half step up (e.g., C to C#)</span>\n      </div>\n      <div class="interval-row">\n        <span class="interval-name">Major 2nd</span>\n        <span class="interval-semitone">2 semitones</span>\n        <span class="interval-description">Whole step up (e.g., C to D)</span>\n      </div>\n      <div class="interval-row">\n        <span class="interval-name">Minor 3rd</span>\n        <span class="interval-semitone">3 semitones</span>\n        <span class="interval-description">Three half steps up (e.g., C to D#)</span>\n      </div>\n      <div class="interval-row">\n        <span class="interval-name">Major 3rd</span>\n        <span class="interval-semitone">4 semitones</span>\n        <span class="interval-description">Four half steps up (e.g., C to E)</span>\n      </div>\n      <div class="interval-row">\n        <span class="interval-name">Perfect 4th</span>\n        <span class="interval-semitone">5 semitones</span>\n        <span class="interval-description">Five half steps up (e.g., C to F)</span>\n      </div>\n      <div class="interval-row">\n        <span class="interval-name">Tritone</span>\n        <span class="interval-semitone">6 semitones</span>\n        <span class="interval-description">Six half steps up (e.g., C to F#)</span>\n      </div>\n      <div class="interval-row">\n        <span class="interval-name">Perfect 5th</span>\n        <span class="interval-semitone">7 semitones</span>\n        <span class="interval-description">Seven half steps up (e.g., C to G)</span>\n      </div>\n      <div class="interval-row">\n        <span class="interval-name">Minor 6th</span>\n        <span class="interval-semitone">8 semitones</span>\n        <span class="interval-description">Eight half steps up (e.g., C to G#)</span>\n      </div>\n      <div class="interval-row">\n        <span class="interval-name">Major 6th</span>\n        <span class="interval-semitone">9 semitones</span>\n        <span class="interval-description">Nine half steps up (e.g., C to A)</span>\n      </div>\n      <div class="interval-row">\n        <span class="interval-name">Minor 7th</span>\n        <span class="interval-semitone">10 semitones</span>\n        <span class="interval-description">Ten half steps up (e.g., C to A#)</span>\n      </div>\n      <div class="interval-row">\n        <span class="interval-name">Major 7th</span>\n        <span class="interval-semitone">11 semitones</span>\n        <span class="interval-description">Eleven half steps up (e.g., C to B)</span>\n      </div>\n      <div class="interval-row">\n        <span class="interval-name">Octave</span>\n        <span class="interval-semitone">12 semitones</span>\n        <span class="interval-description">Twelve half steps up (e.g., C to C)</span>\n      </div>\n    ')}else if("chord"===e){showModal('\n      <h3>Chord Training Guide</h3>\n      <div style="text-align: left; padding-left: 20px">\n        <p style="margin-bottom: 20px; line-height: 1.6;">Chord training helps you understand the building blocks of harmony. Each chord type has a specific formula:</p>\n      </div>\n\n      <div class="interval-row">\n        <span class="interval-name">Major</span>\n        <span class="interval-semitone">Root + M3 + P5</span>\n        <span class="interval-description">Root + Major 3rd + Perfect 5th (e.g., C major = C, E, G)</span>\n      </div>\n      <div class="interval-row">\n        <span class="interval-name">Minor</span>\n        <span class="interval-semitone">Root + m3 + P5</span>\n        <span class="interval-description">Root + Minor 3rd + Perfect 5th (e.g., C minor = C, D#, G)</span>\n      </div>\n      <div class="interval-row">\n        <span class="interval-name">Diminished</span>\n        <span class="interval-semitone">Root + m3 + d5</span>\n        <span class="interval-description">Root + Minor 3rd + Diminished 5th (e.g., C diminished = C, D#, F#)</span>\n      </div>\n      <div class="interval-row">\n        <span class="interval-name">Augmented</span>\n        <span class="interval-semitone">Root + M3 + A5</span>\n        <span class="interval-description">Root + Major 3rd + Augmented 5th (e.g., C augmented = C, E, G#)</span>\n      </div>\n      <div class="interval-row">\n        <span class="interval-name">Major 7th</span>\n        <span class="interval-semitone">Root + M3 + P5 + M7</span>\n        <span class="interval-description">Root + Major 3rd + Perfect 5th + Major 7th (e.g., C major 7 = C, E, G, B)</span>\n      </div>\n      <div class="interval-row">\n        <span class="interval-name">Minor 7th</span>\n        <span class="interval-semitone">Root + m3 + P5 + m7</span>\n        <span class="interval-description">Root + Minor 3rd + Perfect 5th + Minor 7th (e.g., C minor 7 = C, D#, G, A#)</span>\n      </div>\n      <div class="interval-row">\n        <span class="interval-name">Dominant 7th</span>\n        <span class="interval-semitone">Root + M3 + P5 + m7</span>\n        <span class="interval-description">Root + Major 3rd + Perfect 5th + Minor 7th (e.g., C dominant 7 = C, E, G, A#)</span>\n      </div>\n      <div class="interval-row">\n        <span class="interval-name">Diminished 7th</span>\n        <span class="interval-semitone">Root + m3 + d5 + d7</span>\n        <span class="interval-description">Root + Minor 3rd + Diminished 5th + Diminished 7th (e.g., C diminished 7 = C, D#, F#, A)</span>\n      </div>\n\n      <div style="text-align: left; padding-left: 20px; margin-top: 20px;">\n        <p style="line-height: 1.6;"><strong>Tip:</strong> Use the "Show Notes" toggle to help visualize the fretboard while learning!</p>\n      </div>\n    ')}else{showModal('\n      <h3>Note Training Tips</h3>\n      <p style="margin-bottom: 20px; line-height: 1.6;">Hint - limit the questions to a single string to focus your learning on one string at a time if you find learning the whole fretboard at the same time overwhelming.</p>\n    ')}}),document.getElementById("modal-close").addEventListener("click",hideModal),document.getElementById("modal-overlay").addEventListener("click",e=>{"modal-overlay"===e.target.id&&hideModal()}),renderFretboard(),newTask(),updateInstructions(),updateNoteControlsVisibility(),window.addEventListener("scroll",handleScroll),handleScroll();class CookieConsent{constructor(){this.cookieBanner=document.getElementById("cookie-banner"),this.adsenseContainer=document.getElementById("adsense-container"),this.hasShownBanner=this.getCookie("cookie_consent_shown"),this.consentGiven=this.getCookie("cookie_consent"),this.init()}init(){this.hasShownBanner?"true"===this.consentGiven&&this.loadAdSense():setTimeout(()=>{this.showBanner()},1e3),this.setupEventListeners()}showBanner(){this.cookieBanner.classList.add("show")}hideBanner(){this.cookieBanner.classList.remove("show")}setupEventListeners(){document.getElementById("accept-all-cookies").addEventListener("click",()=>{this.acceptAll()}),document.getElementById("accept-selected-cookies").addEventListener("click",()=>{this.acceptSelected()}),document.getElementById("reject-cookies").addEventListener("click",()=>{this.rejectAll()}),document.getElementById("cookie-policy-link").addEventListener("click",e=>{e.preventDefault(),this.showCookiePolicy()}),document.getElementById("privacy-policy-link").addEventListener("click",e=>{e.preventDefault(),this.showPrivacyPolicy()})}acceptAll(){this.setCookie("cookie_consent","true",365),this.setCookie("cookie_consent_shown","true",365),this.setCookie("analytics_cookies","true",365),this.setCookie("advertising_cookies","true",365),this.hideBanner(),this.loadAdSense()}acceptSelected(){const e=document.getElementById("analytics-cookies").checked,t=document.getElementById("advertising-cookies").checked;this.setCookie("cookie_consent","true",365),this.setCookie("cookie_consent_shown","true",365),this.setCookie("analytics_cookies",e.toString(),365),this.setCookie("advertising_cookies",t.toString(),365),this.hideBanner(),t&&this.loadAdSense()}rejectAll(){this.setCookie("cookie_consent","false",365),this.setCookie("cookie_consent_shown","true",365),this.setCookie("analytics_cookies","false",365),this.setCookie("advertising_cookies","false",365),this.hideBanner()}loadAdSense(){if("true"===this.getCookie("advertising_cookies")){const e=document.createElement("script");e.async=!0,e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7206858645894162",e.crossOrigin="anonymous",document.head.appendChild(e),e.onload=()=>{this.adsenseContainer.style.display="block",(adsbygoogle=window.adsbygoogle||[]).push({})}}}showCookiePolicy(){showModal('\n      <h3>Cookie Policy</h3>\n      <div style="text-align: left; line-height: 1.6;">\n        <p><strong>What are cookies?</strong></p>\n        <p>Cookies are small text files that are stored on your device when you visit our website. They help us provide you with a better experience and keep our guitar learning tool free.</p>\n\n        <p><strong>Types of cookies we use:</strong></p>\n        <ul style="padding-left: 20px;">\n          <li><strong>Essential Cookies:</strong> Required for the website to function properly. These cannot be disabled.</li>\n          <li><strong>Analytics Cookies:</strong> Help us understand how our site is used so we can improve it.</li>\n          <li><strong>Advertising Cookies:</strong> Help us show relevant advertisements to keep this tool free.</li>\n        </ul>\n\n        <p><strong>Your choices:</strong></p>\n        <p>You can change your cookie preferences at any time by clicking the cookie settings link in the footer.</p>\n\n        <p><strong>Third-party cookies:</strong></p>\n        <p>We use Google AdSense for advertising. Google may use cookies to show you relevant ads based on your interests.</p>\n      </div>\n    ')}showPrivacyPolicy(){showModal('\n      <h3>Privacy Policy</h3>\n      <div style="text-align: left; line-height: 1.6;">\n        <p><strong>Information we collect:</strong></p>\n        <p>We collect minimal information necessary to provide our guitar learning service. This includes:</p>\n        <ul style="padding-left: 20px;">\n          <li>Usage data to improve our tool</li>\n          <li>Cookie preferences</li>\n          <li>Basic analytics to understand how our site is used</li>\n        </ul>\n\n        <p><strong>How we use your information:</strong></p>\n        <ul style="padding-left: 20px;">\n          <li>To provide and improve our guitar learning tool</li>\n          <li>To show relevant advertisements (with your consent)</li>\n          <li>To understand how our site is used</li>\n        </ul>\n\n        <p><strong>We do not:</strong></p>\n        <ul style="padding-left: 20px;">\n          <li>Collect personal information like names or email addresses</li>\n          <li>Share your data with third parties (except as required for advertising with consent)</li>\n          <li>Use your data for purposes other than providing our service</li>\n        </ul>\n\n        <p><strong>Your rights:</strong></p>\n        <p>You have the right to control your cookie preferences and can change them at any time.</p>\n      </div>\n    ')}setCookie(e,t,n){const s=new Date;s.setTime(s.getTime()+24*n*60*60*1e3),document.cookie=`${e}=${t};expires=${s.toUTCString()};path=/;SameSite=Lax`}getCookie(e){const t=e+"=",n=document.cookie.split(";");for(let e=0;e<n.length;e++){let s=n[e];for(;" "===s.charAt(0);)s=s.substring(1,s.length);if(0===s.indexOf(t))return s.substring(t.length,s.length)}return null}}document.addEventListener("DOMContentLoaded",()=>{new CookieConsent});