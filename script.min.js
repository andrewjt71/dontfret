const notes=["E","B","G","D","A","E"],noteMap=["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"],stringOffsets=[4,11,7,2,9,4],fretboard=document.getElementById("fretboard"),taskDisplay=document.getElementById("task-text"),feedback=document.getElementById("feedback"),stringSelect=document.getElementById("string-select"),noteTypeSelect=document.getElementById("note-type-select");let target={};const modeSelect=document.getElementById("mode-select"),showNotesToggle=document.getElementById("show-notes-toggle"),intervalCheatsheet=document.getElementById("interval-cheatsheet"),chords={major:[0,4,7],minor:[0,3,7],diminished:[0,3,6],augmented:[0,4,8],major7:[0,4,7,11],minor7:[0,3,7,10],dominant7:[0,4,7,10],diminished7:[0,3,6,9]},scales={major:[0,2,4,5,7,9,11],natural_minor:[0,2,3,5,7,8,10],harmonic_minor:[0,2,3,5,7,8,11],melodic_minor:[0,2,3,5,7,9,11],pentatonic_major:[0,2,4,7,9],pentatonic_minor:[0,3,5,7,10],blues:[0,3,5,6,7,10],dorian:[0,2,3,5,7,9,10],mixolydian:[0,2,4,5,7,9,10],lydian:[0,2,4,6,7,9,11],phrygian:[0,1,3,5,7,8,10],locrian:[0,1,3,5,6,8,10]};function getChordNotes(e,t){const o=noteMap.indexOf(e);return chords[t].map(e=>noteMap[(o+e)%12])}function getScaleNotes(e,t){const o=noteMap.indexOf(e);return scales[t].map(e=>noteMap[(o+e)%12])}function noteAt(e,t){return noteMap[(stringOffsets[e]+t)%12]}function isNoteValid(e){const t=noteTypeSelect.value,o=!e.includes("#");return"all"===t||("natural"===t?o:"accidental"!==t||!o)}let clickedPositions=[],incorrectPositions=[];function renderFretboard(){fretboard.innerHTML="",feedback.textContent="",feedback.classList.remove("feedback-correct","feedback-incorrect");const e=fretboard.clientWidth,t=fretboard.clientHeight,o=13,n=stringSelect.value,a=modeSelect.value,r=showNotesToggle.checked;for(let e=0;e<6;e++){const o=.05,a=o*t+e/5*(t*(1-2*o)),r=document.createElement("div");r.classList.add("string-hitbox"),r.style.top=`${a}px`,r.dataset.string=e,"all"!==n&&e===parseInt(n)-1&&"interval"!==modeSelect.value&&r.classList.add("glow"),r.addEventListener("click",handleClick);const i=document.createElement("div");i.classList.add("string-line"),r.appendChild(i),fretboard.appendChild(r)}const i=[3,5,7,9,12];for(let n=0;n<o;n++){const o=n/12*e,a=document.createElement("div");if(a.classList.add("fret-line"),a.style.left=`${o}px`,fretboard.appendChild(a),n>0){const t=document.createElement("div");t.classList.add("fret-label");const o=(n-.5)/12*e;t.style.left=`${o}px`,t.textContent=n,fretboard.appendChild(t)}if(i.includes(n)){const a=document.createElement("div");if(a.classList.add("dot-marker"),a.style.left=o-e/12/2+"px",a.style.top=(12===n?t/2-45:t/2)+"px",fretboard.appendChild(a),12===n){const e=a.cloneNode();e.style.top=t/2+45+"px",fretboard.appendChild(e)}}}"chord"===a&&clickedPositions.length>0&&clickedPositions.forEach(o=>{const n=(o.fret-1+.5)*(e/12),a=.05*t+o.string/5*(.9*t),r=document.createElement("div");r.classList.add("marker","correct"),r.style.left=`${n}px`,r.style.top=`${a}px`,fretboard.appendChild(r)}),"scale"===a&&clickedPositions.length>0&&clickedPositions.forEach(o=>{const n=(o.fret-1+.5)*(e/12),a=.05*t+o.string/5*(.9*t),r=document.createElement("div");r.classList.add("marker","correct"),r.style.left=`${n}px`,r.style.top=`${a}px`,fretboard.appendChild(r)}),"chord"===a&&incorrectPositions.length>0&&incorrectPositions.forEach(o=>{const n=(o.fret-1+.5)*(e/12),a=.05*t+o.string/5*(.9*t),r=document.createElement("div");r.classList.add("marker","incorrect"),r.style.left=`${n}px`,r.style.top=`${a}px`,fretboard.appendChild(r)}),"scale"===a&&incorrectPositions.length>0&&incorrectPositions.forEach(o=>{const n=(o.fret-1+.5)*(e/12),a=.05*t+o.string/5*(.9*t),r=document.createElement("div");r.classList.add("marker","incorrect"),r.style.left=`${n}px`,r.style.top=`${a}px`,fretboard.appendChild(r)});for(let e=0;e<6;e++){const o=noteAt(e,0),n=.05,a=n*t+e/5*(t*(1-2*n)),r=document.createElement("div");r.classList.add("open-string-hitbox"),r.style.position="absolute",r.style.left="-14px",r.style.top=a-6+"px",r.style.width="20px",r.style.height="12px",r.style.cursor="pointer",r.dataset.string=e,r.dataset.fret="0",r.addEventListener("click",handleClick),fretboard.appendChild(r);const i=document.createElement("div");i.classList.add("note-label"),i.classList.add(o.includes("#")?"accidental":"natural"),i.style.left="-14px",i.style.top=`${a}px`,i.textContent=o,fretboard.appendChild(i)}if(r)for(let o=0;o<6;o++)for(let n=1;n<=12;n++){const a=noteAt(o,n),r=n/12*e,i=.05,s=i*t+o/5*(t*(1-2*i)),d=document.createElement("div");d.classList.add("note-label"),d.classList.add(a.includes("#")?"accidental":"natural"),d.style.left=r-e/12/2+"px",d.style.top=`${s}px`,d.textContent=a,fretboard.appendChild(d)}}function updateNoteControlsVisibility(){const e=modeSelect.value,t=document.getElementById("string-select").parentElement.parentElement,o=document.getElementById("note-type-select").parentElement.parentElement;"interval"===e||"chord"===e||"scale"===e?(t.style.display="none",o.style.display="none"):(t.style.display="flex",o.style.display="flex")}function ordinal(e){return 1===e?"1st":2===e?"2nd":3===e?"3rd":`${e}th`}function newTask(){const e=modeSelect.value;if("interval"===e){const e=[{name:"minor 2nd",semitones:1},{name:"major 2nd",semitones:2},{name:"minor 3rd",semitones:3},{name:"major 3rd",semitones:4},{name:"perfect 4th",semitones:5},{name:"tritone",semitones:6},{name:"perfect 5th",semitones:7},{name:"minor 6th",semitones:8},{name:"major 6th",semitones:9},{name:"minor 7th",semitones:10},{name:"major 7th",semitones:11},{name:"octave",semitones:12}],t=noteMap[Math.floor(12*Math.random())],o=e[Math.floor(Math.random()*e.length)];return target={mode:"interval",root:t,semitones:o.semitones,intervalName:o.name},void(taskDisplay.textContent=`Find the ${o.name} from ${t}`)}if("chord"===e){const e=Object.keys(chords),t=e[Math.floor(Math.random()*e.length)],o=noteMap[Math.floor(12*Math.random())],n=getChordNotes(o,t);clickedPositions=[],incorrectPositions=[],target={mode:"chord",root:o,chordType:t,chordNotes:n,selectedNotes:[],completed:!1};const a={major:"major",minor:"minor",diminished:"diminished",augmented:"augmented",major7:"major 7th",minor7:"minor 7th",dominant7:"dominant 7th",diminished7:"diminished 7th"}[t];return void(taskDisplay.textContent=`Find all the notes in ${o} ${a} chord`)}if("scale"===e){const e=Object.keys(scales),t=e[Math.floor(Math.random()*e.length)],o=noteMap[Math.floor(12*Math.random())],n=getScaleNotes(o,t);clickedPositions=[],incorrectPositions=[],target={mode:"scale",root:o,scaleType:t,scaleNotes:n,selectedNotes:[],completed:!1};const a={major:"major",natural_minor:"natural minor",harmonic_minor:"harmonic minor",melodic_minor:"melodic minor",pentatonic_major:"major pentatonic",pentatonic_minor:"minor pentatonic",blues:"blues",dorian:"dorian",mixolydian:"mixolydian",lydian:"lydian",phrygian:"phrygian",locrian:"locrian"}[t];return void(taskDisplay.textContent=`Find all the notes in ${o} ${a} scale`)}let t;const o=stringSelect.value;let n,a;t="all"===o?Math.floor(6*Math.random()):parseInt(o)-1;do{a=Math.floor(13*Math.random()),n=noteAt(t,a)}while(!isNoteValid(n));target={string:t,fret:a,note:n};const r=ordinal(t+1),i=0===a?"open":`${a}${1===a?"st":2===a?"nd":3===a?"rd":"th"} fret`;taskDisplay.textContent=`Click on the ${n} note on the ${r} string (${i}).`}function handleClick(e){const t=modeSelect.value,o=parseInt(e.currentTarget.dataset.string),n=e.currentTarget.classList.contains("open-string-hitbox");let a,r,i,s;const d=.05,c=fretboard.clientHeight;if(n)a=0,r=noteAt(o,0),i=-14,s=d*c+o/5*(.9*c);else{i=e.offsetX;const t=fretboard.clientWidth;a=Math.floor(i/(t/12))+1,r=noteAt(o,a),s=d*c+o/5*(.9*c)}const l=document.createElement("div");if(l.classList.add("marker"),l.style.left=`${i}px`,l.style.top=`${s}px`,"interval"===t){const t=noteMap[(noteMap.indexOf(target.root)+target.semitones)%12];return void(r===t?(l.classList.add("correct"),showFeedback(`<div>✅ Good!</div><div style="font-size: 14px; color: #aaa;">You found ${r} correctly!</div>`,"feedback-correct"),createParticles(e.clientX,s,!0),fretboard.appendChild(l),setTimeout(()=>{renderFretboard(),newTask()},2e3)):(l.classList.add("incorrect"),showFeedback(`<div>❌ OOPS</div><div style="font-size: 14px; color: #aaa;">You clicked ${r}. Expected ${t}.</div>`,"feedback-incorrect"),createParticles(e.clientX,s,!1),fretboard.appendChild(l)))}if("chord"===t){if(clickedPositions.some(e=>e.string===o))return l.classList.add("incorrect"),showFeedback(`<div>❌ String already used!</div><div style="font-size: 14px; color: #aaa;">You already selected a note on the ${ordinal(o+1)} string. Choose a different string.</div>`,"feedback-incorrect"),createParticles(e.clientX,s,!1),void fretboard.appendChild(l);if(target.chordNotes.includes(r)){target.selectedNotes.push(r),clickedPositions.push({string:o,fret:a}),l.classList.add("correct");[...new Set(target.selectedNotes)].length===target.chordNotes.length?(showFeedback(`<div>✅ Chord Complete!</div><div style="font-size: 14px; color: #aaa;">You found all notes in ${target.root} ${target.chordType} chord!</div>`,"feedback-correct"),createParticles(e.clientX,s,!0),target.completed=!0,setTimeout(()=>{target.selectedNotes=[],clickedPositions=[],incorrectPositions=[],renderFretboard(),newTask()},2e3)):(showFeedback(`<div>✅ Good!</div><div style="font-size: 14px; color: #aaa;">Found ${r}.</div>`,"feedback-correct"),createParticles(e.clientX,s,!0))}else l.classList.add("incorrect"),showFeedback(`<div>❌ Not in chord!</div><div style="font-size: 14px; color: #aaa;">${r} is not in ${target.root} ${target.chordType} chord. Need: ${target.chordNotes.filter(e=>!target.selectedNotes.includes(e)).join(", ")}</div>`,"feedback-incorrect"),createParticles(e.clientX,s,!1),incorrectPositions.push({string:o,fret:a});return void fretboard.appendChild(l)}if("scale"!==t)if(l.classList.add("marker"),l.style.left=`${i}px`,l.style.top=`${s}px`,r===target.note&&o===target.string){l.classList.add("correct");const t=0===target.fret?"open":`${target.fret}${1===target.fret?"st":2===target.fret?"nd":3===target.fret?"rd":"th"} fret`;showFeedback(`<div>✅ Good!</div><div style="font-size: 14px; color: #aaa;">You found ${r} on the ${ordinal(o+1)} string (${t})!</div>`,"feedback-correct"),createParticles(e.clientX,s,!0),fretboard.appendChild(l),setTimeout(()=>{renderFretboard(),newTask()},2e3)}else{const t=target.string,n=target.note,a=ordinal(t+1),i=ordinal(o+1),d=0===target.fret?"open":`${target.fret}${1===target.fret?"st":2===target.fret?"nd":3===target.fret?"rd":"th"} fret`;l.classList.add("incorrect"),showFeedback(`<div>❌ OOPS</div><div style="font-size: 14px; color: #aaa;">You clicked ${r} on the ${i} string. Expected ${n} on the ${a} string (${d}).</div>`,"feedback-incorrect"),createParticles(e.clientX,s,!1),fretboard.appendChild(l)}else{if(target.scaleNotes.includes(r))if(target.selectedNotes.includes(r))l.classList.add("incorrect"),showFeedback(`<div>❌ Already found!</div><div style="font-size: 14px; color: #aaa;">You already found ${r}. Find the remaining notes: ${target.scaleNotes.filter(e=>!target.selectedNotes.includes(e)).join(", ")}</div>`,"feedback-incorrect"),createParticles(e.clientX,s,!1);else if(target.selectedNotes.push(r),clickedPositions.push({string:o,fret:a}),l.classList.add("correct"),target.selectedNotes.length===target.scaleNotes.length){const t={major:"major",natural_minor:"natural minor",harmonic_minor:"harmonic minor",melodic_minor:"melodic minor",pentatonic_major:"major pentatonic",pentatonic_minor:"minor pentatonic",blues:"blues",dorian:"dorian",mixolydian:"mixolydian",lydian:"lydian",phrygian:"phrygian",locrian:"locrian"}[target.scaleType];showFeedback(`<div>✅ Scale Complete!</div><div style="font-size: 14px; color: #aaa;">You found all notes in ${target.root} ${t} scale!</div>`,"feedback-correct"),createParticles(e.clientX,s,!0),target.completed=!0,setTimeout(()=>{target.selectedNotes=[],clickedPositions=[],incorrectPositions=[],renderFretboard(),newTask()},2e3)}else showFeedback(`<div>✅ Good!</div><div style="font-size: 14px; color: #aaa;">Found ${r}.</div>`,"feedback-correct"),createParticles(e.clientX,s,!0);else l.classList.add("incorrect"),showFeedback(`<div>❌ Not in scale!</div><div style="font-size: 14px; color: #aaa;">${r} is not in ${target.root} ${target.scaleType} scale. Need: ${target.scaleNotes.filter(e=>!target.selectedNotes.includes(e)).join(", ")}</div>`,"feedback-incorrect"),createParticles(e.clientX,s,!1),incorrectPositions.push({string:o,fret:a});fretboard.appendChild(l)}}function createParticles(e,t,o){const n=o?["#4CAF50"]:["#f44336"],a=e,r=fretboard.getBoundingClientRect().top+t;for(let e=0;e<1;e++){const e=document.createElement("div");e.className="particle";const t=18;e.style.width=t+"px",e.style.height=t+"px",e.style.left=a-t/2+"px",e.style.top=r-t/2+"px",e.style.backgroundColor=n[Math.floor(Math.random()*n.length)];const o=60*Math.random()-30,i=60*Math.random()-30;e.style.transform=`translate(${o}px, ${i}px)`,document.body.appendChild(e),setTimeout(()=>{e.parentNode&&e.parentNode.removeChild(e)},1e3)}}function updateInstructions(){const e=modeSelect.value,t=document.getElementById("instructions-title"),o=document.getElementById("instructions-text");"interval"===e?(t.textContent="Interval Training",o.textContent="In guitar theory (and music theory in general), intervals are the building blocks of melody and harmony. An interval is the distance between two notes, measured in steps or semitones."):"chord"===e?(t.textContent="Chord Training",o.textContent="Learn to identify the notes that make up different chord types. Click on all the notes that belong to the given chord. You can select notes in any order, and the exercise is complete when you've found all the required notes."):"scale"===e?(t.textContent="Scale Training",o.textContent="Master scale construction by identifying all the notes in different scale types. Click on each note that belongs to the given scale. This training helps you understand scale patterns and improves your ability to play scales across the fretboard."):(t.textContent="Note Training",o.textContent="Knowing the notes of the guitar neck from memory is one of the most powerful things you can do as a guitarist. It unlocks fluency, creativity, and precision in virtually every area of your playing. Test your knowledge by  guessing the note on the fretboard.")}function showModal(e){const t=document.getElementById("modal-overlay"),o=document.getElementById("modal-content-inner"),n=document.getElementById(e).innerHTML;o.innerHTML=n,t.style.display="flex"}function hideModal(){document.getElementById("modal-overlay").style.display="none"}function handleScroll(){const e=document.querySelector(".main-header");window.innerWidth<=600||window.scrollY>50?e.classList.add("scrolled"):e.classList.remove("scrolled")}function showFeedback(e,t){feedback.textContent="",feedback.classList.remove("feedback-correct","feedback-incorrect"),requestAnimationFrame(()=>{feedback.innerHTML=e,feedback.classList.add(t)})}document.getElementById("new-task").addEventListener("click",()=>{"chord"!==modeSelect.value&&"scale"!==modeSelect.value||(clickedPositions=[],incorrectPositions=[],target&&target.selectedNotes&&(target.selectedNotes=[])),feedback.textContent="",feedback.classList.remove("feedback-correct","feedback-incorrect"),renderFretboard(),newTask()}),modeSelect.addEventListener("change",()=>{"interval"===modeSelect.value&&(stringSelect.value="all"),clickedPositions=[],incorrectPositions=[],target&&target.selectedNotes&&(target.selectedNotes=[]),feedback.textContent="",feedback.classList.remove("feedback-correct","feedback-incorrect"),renderFretboard(),newTask(),updateInstructions(),updateNoteControlsVisibility()}),stringSelect.addEventListener("change",()=>{renderFretboard(),newTask()}),noteTypeSelect.addEventListener("change",()=>{renderFretboard(),newTask()}),showNotesToggle.addEventListener("change",()=>{renderFretboard()}),document.getElementById("info-icon").addEventListener("click",()=>{const e=modeSelect.value;let t;t="interval"===e?"interval-modal-content":"chord"===e?"chord-modal-content":"scale"===e?"scale-modal-content":"note-modal-content",showModal(t)}),document.getElementById("modal-close").addEventListener("click",hideModal),document.getElementById("modal-overlay").addEventListener("click",e=>{"modal-overlay"===e.target.id&&hideModal()}),renderFretboard(),newTask(),updateInstructions(),updateNoteControlsVisibility(),window.addEventListener("scroll",handleScroll),handleScroll();